// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    schemas  = ["public", "auth", "storage"]
}

model Profile {
    id      String @id @default(uuid()) @db.Uuid
    name    String
    image   String @db.Uuid
    user    users  @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId  String @unique @map("user_id") @db.Uuid
    options Json

    workspace WorkSpace[]

    @@map("profiles")
    @@schema("public")
}

model WorkSpace {
    id   String @id @default(uuid()) @db.Uuid
    name String

    // createdAt DateTime @db.Timestamptz(6)
    // updatedAt DateTime @db.Timestamptz(6)

    profile  Profile?  @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId   String?   @db.Uuid
    explorer Explorer?

    @@map("workspaces")
    @@schema("public")
}

enum ItemType {
    document
    directory

    @@map("item_types")
    @@schema("public")
}

model Item {
    id   String   @id @default(uuid()) @db.Uuid
    type ItemType

    name    String
    content String @db.Text

    parentId String @db.Uuid
    parent   Item?  @relation("hierarchy", fields: [parentId], references: [id], onDelete: Cascade)
    children Item[] @relation("hierarchy")

    // createdAt DateTime @db.Timestamptz(6)
    // updatedAt DateTime @db.Timestamptz(6)

    explorer   Explorer? @relation(fields: [explorerId], references: [id], onDelete: Cascade)
    explorerId String?   @db.Uuid

    @@map("items")
    @@schema("public")
}

model Explorer {
    id String @id @default(uuid()) @db.Uuid

    workspace   WorkSpace @relation(fields: [workspaceId], references: [id])
    workspaceId String    @unique @db.Uuid

    items Item[]

    @@map("explorers")
    @@schema("public")
}

// 
// Supabase Generated

model users {
    id                 String    @id @db.Uuid
    role               String?   @db.VarChar(255)
    email              String?   @db.VarChar(255)
    encrypted_password String?   @db.VarChar(255)
    last_sign_in_at    DateTime? @db.Timestamptz(6)
    is_super_admin     Boolean?
    created_at         DateTime? @db.Timestamptz(6)
    updated_at         DateTime? @db.Timestamptz(6)
    Profile            Profile?

    @@schema("auth")
}
